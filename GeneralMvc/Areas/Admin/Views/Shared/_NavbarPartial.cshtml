@using General.Entity.Category
@using General.Framework
@using Microsoft.AspNetCore.Html
@{
    ViewBag.Title = "菜单页";
    var workContext = Html.GetWorkContext();
}
@functions
{
//获取菜单字符
public HtmlString RenderMenuItem(Category item, List<Category> aa)
{
    var href = string.Empty;
    if (!string.IsNullOrEmpty(item.RouteName))
    {
        href = Url.Action(item.RouteName);
    }
    else if (!string.IsNullOrEmpty(item.Controller) && !string.IsNullOrEmpty(item.Action))
    {
        href = Url.Action(item.Action, item.Controller);
    }

    string s = $@"<li id={item.ResourceId} {(Context.Request.Path.Value.Equals(href, StringComparison.InvariantCultureIgnoreCase) ? "class=active" : "")}>";

    var childNodes = aa.Where(o => o.FatherResource == item.SysResource && o.IsMenu).OrderBy(o => o.Sort).ThenBy(o => o.Name).ToList();

    s += $@"<a href={(!string.IsNullOrEmpty(href) ? href : "javascript:")}  {(childNodes.Any() ? "class=dropdown-toggle" : "")}> <i class='{item.CssClass}'></i><span class='menu-text'>{item.Name}</span>";

    if (childNodes.Any())
    {
        s += $@"<b class='arrow fa fa-angle-down'></b>";
    }

    s += @"</a>";
    s += "<b class='arrow'></b>";

    if (childNodes.Any())
    {
        s += @"<ul class='submenu'>";
        foreach (var childItem in childNodes)
        {
            s += RenderMenuItem(childItem, aa);
        }
        s += "</ul>";
    }

    s += "</li>";
    if (Context.Request.Path.Value.Equals(href, StringComparison.InvariantCultureIgnoreCase))
    {
        s += $@"<script>$('#{item.FatherId}').addClass('open active').parents('li').addClass('open active')</script>";

    }
    return new HtmlString(s);
}

}
<div id="sidebar" class="sidebar  responsive  sidebar-fixed">
    @{
        List<Category> list = workContext.Categories;
        if (list != null)
        {
            var nodes = list.Where(o => string.IsNullOrEmpty(o.FatherResource)).Where(o => o.IsMenu).OrderBy(o => o.Sort).ThenBy(o => o.Name).ToList();

            <ul class="nav nav-list">
                @if (nodes != null)
                {
                    foreach (var item in nodes)
                    {
                        @RenderMenuItem(item, list)
                    }
                }
            </ul>

            string controller = ViewContext.RouteData.Values["controller"].ToString();

            string action = ViewContext.RouteData.Values["action"].ToString();

            //当前
            var current = list.FirstOrDefault(o => o.Action == action && o.Controller == controller);
            if (current != null && current.IsMenu)
            {
                <script>
                    $('#@(current.FatherId)').addClass('active').parents('li').addClass('open active');
                    $('#showMenuNameTop').html('@current.Name');
                </script>

            }
            else
            {
                <script>
                    $('#showMenuNameTop').html('主界面');
                </script>
            }


        }
    }
    <div class="sidebar-toggle sidebar-collapse" id="sidebar-collapse">
        <i id="sidebar-toggle-icon" class="ace-icon fa fa-angle-double-left ace-save-state" data-icon1="ace-icon fa fa-angle-double-left" data-icon2="ace-icon fa fa-angle-double-right"></i>
    </div>
</div>